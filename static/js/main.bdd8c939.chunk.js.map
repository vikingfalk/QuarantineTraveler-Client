{"version":3,"sources":["styledElements/FlagCard.js","components/FlagCard.js","styledElements/PictureCard.js","components/PictureCard.js","components/Board.js","helpers.js","styledElements/Button.js","pages/Game.js","assets/traveller.png","assets/worldwide.png","assets/airplane.png","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["styled","article","props","disabled","css","tried","matched","FlagCard","card","checkMatch","scoreValue","roundOver","onClick","className","country","src","flagURL","PictureCard","process","pictureURL","Board","setFinished","onMatched","useState","flagCards","setFlagCards","pictureCards","setPictureCards","currentPicture","setCurrentPicture","error","setError","loading","setLoading","setRoundOver","flag","temp","length","map","flagCard","id","setTimeout","filter","index","useEffect","fetch","then","res","json","data","flags","flagGroup","sort","Math","random","uuidv4","type","name","pictures","button","main","again","start","Game","tries","setTries","score","setScore","finished","history","useHistory","Button","go","to","bool","Home","world","traveller","plane","App","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdd8c939.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\n\nexport default styled.article`\n  display: block;\n  position: relative;\n  width: 100%;\n  height: calc(100vw * 0.25);\n  /* overflow: hidden; */\n  box-shadow: 0 0 10px 1px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  cursor: pointer;\n\n  & > .country-name {\n    display: none;\n    position: absolute;\n    background-color: rgba(150, 150, 150, 0.5);\n    height: 100%;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n\n    & > p {\n      display: none;\n      color: white;\n      text-transform: capitalize;\n      text-shadow: 0 0 5px rgba(0, 0, 0, 0.8);\n      font-size: 1.5rem;\n    }\n\n    & > .score-gained {\n      position: absolute;\n      color: rgb(40, 255, 40);\n      text-shadow: 0 0 5px rgba(0, 0, 0, 0.8);\n      animation: scoreGained 1.5s ease-out forwards;\n    }\n  }\n\n  & > img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    border-radius: 5px;\n  }\n\n  ${props => props.disabled && css`\n    cursor: default;\n\n    & > .country-name {\n      display: flex;\n    }\n  `}\n\n  ${props => props.tried && css`\n    box-shadow: 0 0 2px 3px rgba(255, 40, 40, 0.8);\n    cursor: default;\n\n    & > .country-name {\n      display: flex;\n    }\n\n    & > .country-name > p {\n      display: block;\n    }\n  `}\n\n  ${props => props.matched && css`\n    box-shadow: 0 0 2px 3px rgba(40, 255, 40, 0.8);\n\n    & > .country-name > p {\n      display: block;\n    }\n  `}\n\n  @media (min-width: 480px) {\n    &:hover {\n      ${props => !props.tried && !props.disabled && css`\n        box-shadow: 0 0 6px 6px rgba(80, 255, 80, 0.6);\n      `}\n    }\n\n    & {\n      height: 100%;\n    }\n  }\n\n  @keyframes scoreGained {\n    0% {bottom: 50%; opacity: 100%}\n    40% {opacity: 100%}\n    100% {bottom: 8rem; opacity: 0%}\n  }\n`;\n","import CardEl from '../styledElements/FlagCard';\n\nconst FlagCard = ({\n  card, checkMatch, scoreValue, roundOver,\n}) => (\n  <CardEl\n    onClick={!card.tried && !card.disabled ? () => checkMatch(card) : () => {}}\n    tried={card.tried}\n    matched={card.matched}\n    disabled={roundOver}\n  >\n    <div className=\"country-name\">\n      <p>{card.country}</p>\n      {card.matched && <h2 className=\"score-gained\">+{scoreValue}</h2>}\n    </div>\n    <img src={card.flagURL} />\n  </CardEl>\n);\n\nexport default FlagCard;\n","import styled from 'styled-components';\n\nexport default styled.article`\n  display: inline-block;\n  width: 100%;\n  overflow: hidden;\n  box-shadow: 0 0 10px 1px rgba(0, 0, 0, 0.2);\n  position: relative;\n  height: 100%;\n\n  & > img {\n    display: block;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n\n  .cheat-text {\n    position: absolute;\n    color: pink;\n    background-color: black;\n    font-size: 2rem;\n    right: 0;\n    bottom: 0;\n  }\n\n  @media (min-width: 480px) {\n    & {\n      border-radius: 5px;\n      height: calc(100vw * 0.35);\n    }\n  }\n`;\n","import CardEl from '../styledElements/PictureCard';\n\nconst PictureCard = ({ card }) => (\n  <CardEl>\n    {process.env.NODE_ENV === 'development' && <p className=\"cheat-text\">{card.country}</p>}\n    <img src={card.pictureURL} />\n  </CardEl>\n);\n\nexport default PictureCard;\n","import { useState, useEffect } from 'react';\nimport { mapFlagCards, mapPictureCards, shuffleArray } from '../helpers';\nimport FlagCard from './FlagCard';\nimport PictureCard from './PictureCard';\n\nconst Board = ({ setFinished, onMatched }) => {\n  const [flagCards, setFlagCards] = useState(null);\n  const [pictureCards, setPictureCards] = useState(null);\n  const [currentPicture, setCurrentPicture] = useState(null);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [roundOver, setRoundOver] = useState(false);\n  const serverURL = process.env.NODE_ENV === 'production' ? 'https://quarantine-traveler.herokuapp.com' : 'http://localhost:8080';\n\n  const checkMatch = flag => {\n    if (flag.country === currentPicture.country) {\n      setRoundOver(true);\n      const temp = flagCards;\n      temp[flagCards.length - pictureCards.length] = temp[flagCards.length - pictureCards.length]\n        .map(flagCard => (flagCard.id === flag.id ? { ...flagCard, matched: true } : flagCard));\n      setFlagCards(temp);\n      setTimeout(() => setPictureCards(pictureCards.filter((card, index) => index !== 0)), 2000);\n      onMatched(true);\n    } else {\n      onMatched(false);\n      const temp = flagCards;\n      temp[flagCards.length - pictureCards.length] = temp[flagCards.length - pictureCards.length]\n        .map(flagCard => (flagCard.id === flag.id ? { ...flagCard, tried: true } : flagCard));\n      setFlagCards(temp);\n    }\n  };\n\n  useEffect(() => {\n    if (!pictureCards) {\n      return;\n    }\n\n    if (pictureCards.length === 0) {\n      setFinished(true);\n      return;\n    }\n\n    setCurrentPicture(pictureCards[0]);\n    setRoundOver(false);\n  }, [pictureCards]);\n\n  useEffect(() => {\n    fetch(serverURL)\n      .then(res => res.json())\n      .then(data => {\n        if (data.error) {\n          setError('Error loading game');\n          return;\n        }\n        const flags = data.flags.map(flagGroup => mapFlagCards([...shuffleArray(flagGroup)]));\n        const pictures = mapPictureCards(data.pictures);\n        setFlagCards(flags);\n        setPictureCards(pictures);\n        setLoading(false);\n      });\n  }, []);\n\n  if (error) {\n    return <h2>{error}</h2>;\n  }\n\n  if (loading) {\n    return <h2>게임 로딩 중...</h2>;\n  }\n\n  if (pictureCards.length === 0) {\n    return null;\n  }\n\n  return (\n    <section className=\"board\">\n      <section className=\"board__column board__column--picture\">\n        <PictureCard card={currentPicture}/>\n      </section>\n      <section className=\"board__column board__column--flags\">\n        {flagCards && flagCards[flagCards.length - pictureCards.length].map(card => (\n          <FlagCard\n            key={card.id}\n            card={card}\n            checkMatch={checkMatch}\n            scoreValue={\n              flagCards[flagCards.length - pictureCards.length]\n                .filter(flag => !flag.tried).length\n            }\n            roundOver={roundOver}\n          />\n        ))}\n      </section>\n    </section>\n  );\n};\n\nexport default Board;\n","import { v4 as uuidv4 } from 'uuid';\n\nexport const mapPictureCards = countriesData => countriesData.map(country => ({\n  id: uuidv4(),\n  type: 'picture',\n  country: country.name,\n  pictureURL: country.pictureURL,\n}));\n\nexport const mapFlagCards = countriesData => countriesData.map(country => ({\n  id: uuidv4(),\n  type: 'flag',\n  country: country.name,\n  flagURL: `./assets/flags/${country.name}.png`,\n  tried: false,\n  matched: false,\n}));\n\nexport const shuffleArray = array => array.sort(() => 0.5 - Math.random());\n","import styled, { css } from 'styled-components';\n\nexport default styled.button`\n  border: none;\n  padding: 0.8rem 1.5rem;\n  border-radius: 5px;\n  font-size: 1.6rem;\n  transition: all 0.2s;\n  cursor: pointer;\n  background-color: rgb(220, 220, 220);\n\n  &:hover {\n    background-color: rgb(230, 230, 230);\n  }\n\n  ${props => props.main && css`\n  background-color: rgb(82, 235, 123);\n    padding: 0.8rem 2rem;\n  `}\n\n  ${props => props.main && !props.disabled && css`\n    &:hover {\n      background-color: rgb(102, 255, 153);\n    }\n  `}\n\n  ${props => props.disabled && css`\n    background-color: rgb(180, 180, 180);\n    color: rgb(100, 100, 100);\n    transition: none;\n    cursor: default;\n\n    &:hover {\n      background-color: rgb(180, 180, 180);\n    }\n  `}\n\n  ${props => props.again && css`\n    background-color: rgb(82, 235, 123);\n\n    &:hover {\n      background-color: rgb(102, 255, 153);\n    }\n  `}\n\n  ${props => props.start && css`\n    padding: 1rem 3rem;\n    font-size: 1.8rem;\n  `}\n`;\n","import { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Board from '../components/Board';\nimport ButtonEl from '../styledElements/Button';\nimport './Game.css';\n\nconst Game = () => {\n  const [tries, setTries] = useState(0);\n  const [score, setScore] = useState(0);\n  const [finished, setFinished] = useState(false);\n  const history = useHistory();\n\n  const onMatched = bool => {\n    if (bool) {\n      setScore(score + (6 - tries));\n      setTries(0);\n      return;\n    }\n    setTries(tries + 1);\n  };\n\n  if (finished) {\n    return (\n      <div className=\"container container--column-center\">\n        <h1 className=\"finished-text\">잘 하셨습니다! 점수가 {score}점으로 게임을 성공하셨습니다!</h1>\n        <section className=\"buttons-wrapper\">\n          <ButtonEl onClick={() => history.go(0)} again>게임 또 하기</ButtonEl>\n          <Link to=\"/\">\n            <ButtonEl>홈 페이지</ButtonEl>\n          </Link>\n        </section>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container container--column-center\">\n      <Link to=\"/\">\n        <span className=\"btn-home\">\n          <span className=\"material-icons btn-home__icon\">exit_to_app</span>\n          <span className=\"btn-home__text\">돌아가기</span>\n        </span>\n      </Link>\n      <article className=\"counter\">점수: <p className=\"score\">{score}</p>점</article>\n      <Board setFinished={setFinished} onMatched={onMatched} />\n    </div>\n  );\n};\n\nexport default Game;\n","export default __webpack_public_path__ + \"static/media/traveller.335e8bd8.png\";","export default __webpack_public_path__ + \"static/media/worldwide.835418a6.png\";","export default __webpack_public_path__ + \"static/media/airplane.08eb947d.png\";","import { Link } from 'react-router-dom';\nimport ButtonEl from '../styledElements/Button';\nimport traveller from '../assets/traveller.png';\nimport world from '../assets/worldwide.png';\nimport plane from '../assets/airplane.png';\nimport './Home.css';\n\nconst Home = () => (\n  <div className=\"container container--column-center\">\n    <h1 className=\"main-heading\">Quarantine Traveler</h1>\n    <h2 className=\"sub-heading\">게임을 한 번 해 보십시오!</h2>\n    <Link to=\"/game\">\n      <ButtonEl main start>게임 시작</ButtonEl>\n    </Link>\n    <img className=\"img-world\" src={world} />\n    <img className=\"img-traveller\" src={traveller} />\n    <img className=\"img-plane\" src={plane} />\n  </div>\n);\n\nexport default Home;\n","import { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Game from './pages/Game';\nimport Home from './pages/Home';\nimport './App.css';\n\nconst App = () => (\n  <Router basename=\"/\">\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/game\" component={Game} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}