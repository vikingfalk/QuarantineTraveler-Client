{"version":3,"sources":["texts/english.js","texts/swedish.js","texts/korean.js","texts/countryNames.js","context/LanguageContext.js","styledElements/FlagCard.js","components/FlagCard.js","styledElements/PictureCard.js","components/PictureCard.js","components/Board.js","helpers.js","styledElements/Button.js","pages/Game.js","styledElements/LanguageButton.js","components/LanguageButton.js","assets/traveller.png","assets/worldwide.png","assets/airplane.png","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["home","subHeading","startButton","game","btnHome","counter","finishedTxt1","finishedTxt2","finishedBtnAgain","finishedBtnHome","loading","swedish","argentina","australia","brazil","cuba","france","germany","italy","japan","korea","mexico","netherlands","romania","russia","spain","sweden","thailand","ukraine","usa","korean","LanguageContext","createContext","LanguageProvider","children","useState","language","setLanguage","Provider","value","getTexts","english","getCountryName","country","countryNames","styled","article","props","disabled","css","tried","matched","FlagCard","card","checkMatch","scoreValue","roundOver","useContext","onClick","className","src","flagURL","buffer","PictureCard","process","pictureURL","Board","setFinished","onMatched","texts","setTexts","flagCards","setFlagCards","pictureCards","setPictureCards","currentPicture","setCurrentPicture","error","setError","setLoading","setRoundOver","flag","temp","length","map","flagCard","id","setTimeout","filter","index","useEffect","fetch","then","res","json","data","flags","flagGroup","sort","Math","random","uuidv4","type","name","pictures","button","main","again","start","Game","tries","setTries","score","setScore","finished","SOUNDS","file","Audio","history","useHistory","playSound","audio","find","sound","volume","play","Button","go","to","bool","active","LanguageButton","buttonLanguage","Home","world","traveller","plane","App","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d5bc37d.chunk.js","sourcesContent":["export default {\r\n  home: {\r\n    subHeading: 'Let\\'s go on an adventure!',\r\n    startButton: 'Start',\r\n  },\r\n  game: {\r\n    btnHome: 'BACK',\r\n    counter: 'SCORE',\r\n    finishedTxt1: 'Good job! You finished with a score of',\r\n    finishedTxt2: '!',\r\n    finishedBtnAgain: 'Play again',\r\n    finishedBtnHome: 'Home screen',\r\n    loading: 'Loading game...',\r\n  },\r\n};\r\n","export default {\r\n  home: {\r\n    subHeading: 'Upptäck världen hemifrån!',\r\n    startButton: 'Starta',\r\n  },\r\n  game: {\r\n    btnHome: 'TILLBAKA',\r\n    counter: 'POÄNG',\r\n    finishedTxt1: 'Bra jobbat! Du lyckades samla ihop',\r\n    finishedTxt2: ' poäng!',\r\n    finishedBtnAgain: 'Spela igen',\r\n    finishedBtnHome: 'Till startsidan',\r\n    loading: 'Laddar spel...',\r\n  },\r\n};\r\n","export default {\r\n  home: {\r\n    subHeading: '게임을 한 번 해 보십시오!',\r\n    startButton: '게임 시작',\r\n  },\r\n  game: {\r\n    btnHome: '돌아가기',\r\n    counter: '점수',\r\n    finishedTxt1: '잘 하셨습니다! 점수가',\r\n    finishedTxt2: '점으로 게임을 성공하셨습니다!',\r\n    finishedBtnAgain: '게임 또 하기',\r\n    finishedBtnHome: '홈 페이지',\r\n    loading: '게임 로딩 중...',\r\n  },\r\n};\r\n","export default {\r\n  swedish: {\r\n    argentina: 'argentina',\r\n    australia: 'australien',\r\n    brazil: 'brasilien',\r\n    cuba: 'kuba',\r\n    france: 'frankrike',\r\n    germany: 'tyskland',\r\n    italy: 'italien',\r\n    japan: 'japan',\r\n    korea: 'korea',\r\n    mexico: 'mexiko',\r\n    netherlands: 'nederländerna',\r\n    romania: 'rumäninen',\r\n    russia: 'ryssland',\r\n    spain: 'spanien',\r\n    sweden: 'sverige',\r\n    thailand: 'thailand',\r\n    ukraine: 'ukraina',\r\n    usa: 'usa',\r\n  },\r\n  korean: {\r\n    argentina: '아르헨티나',\r\n    australia: '호주',\r\n    brazil: '브라질',\r\n    cuba: '쿠바',\r\n    france: '프랑스',\r\n    germany: '독일',\r\n    italy: '이탈리아',\r\n    japan: '일본',\r\n    korea: '한국',\r\n    mexico: '멕시코',\r\n    netherlands: '네덜란드',\r\n    romania: '루마니아',\r\n    russia: '러시아',\r\n    spain: '스페인',\r\n    sweden: '스웨덴',\r\n    thailand: '태국',\r\n    ukraine: '우크라이나',\r\n    usa: '미국',\r\n  },\r\n};\r\n","import React, { useState, createContext } from 'react';\r\nimport english from '../texts/english';\r\nimport swedish from '../texts/swedish';\r\nimport korean from '../texts/korean';\r\nimport countryNames from '../texts/countryNames';\r\n\r\nexport const LanguageContext = createContext();\r\n\r\nexport const LanguageProvider = ({ children }) => {\r\n  const [language, setLanguage] = useState('english');\r\n\r\n  const getTexts = () => {\r\n    switch (language) {\r\n      case 'english':\r\n        return english;\r\n      case 'swedish':\r\n        return swedish;\r\n      case 'korean':\r\n        return korean;\r\n      default:\r\n        return english;\r\n    }\r\n  };\r\n\r\n  const getCountryName = country => {\r\n    switch (language) {\r\n      case 'english':\r\n        return country;\r\n      case 'swedish':\r\n        return countryNames.swedish[country];\r\n      case 'korean':\r\n        return countryNames.korean[country];\r\n      default:\r\n        return country;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LanguageContext.Provider value={{\r\n      setLanguage,\r\n      getTexts,\r\n      getCountryName,\r\n      language,\r\n    }}>\r\n      { children }\r\n    </LanguageContext.Provider>\r\n  );\r\n};\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport default styled.article`\r\n  display: block;\r\n  position: relative;\r\n  width: 100%;\r\n  height: calc(100vw * 0.25);\r\n  /* overflow: hidden; */\r\n  box-shadow: 0 0 10px 1px rgba(0, 0, 0, 0.2);\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  user-drag: none;\r\n\r\n  & > .country-name {\r\n    display: none;\r\n    position: absolute;\r\n    background-color: rgba(150, 150, 150, 0.5);\r\n    height: 100%;\r\n    width: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    user-select: none;\r\n    user-drag: none;\r\n\r\n    & > p {\r\n      display: none;\r\n      color: white;\r\n      text-transform: capitalize;\r\n      text-shadow: 0 0 5px rgba(0, 0, 0, 0.8);\r\n      font-size: 1.5rem;\r\n    }\r\n\r\n    & > .score-gained {\r\n      position: absolute;\r\n      color: rgb(40, 255, 40);\r\n      text-shadow: 0 0 5px rgba(0, 0, 0, 0.8);\r\n      animation: scoreGained 1.5s ease-out forwards;\r\n    }\r\n  }\r\n\r\n  & > img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    border-radius: 5px;\r\n    user-select: none;\r\n    user-drag: none;\r\n  }\r\n\r\n  ${props => props.disabled && css`\r\n    cursor: default;\r\n\r\n    & > .country-name {\r\n      display: flex;\r\n    }\r\n  `}\r\n\r\n  ${props => props.tried && css`\r\n    box-shadow: 0 0 2px 3px rgba(255, 40, 40, 0.8);\r\n    cursor: default;\r\n\r\n    & > .country-name {\r\n      display: flex;\r\n    }\r\n\r\n    & > .country-name > p {\r\n      display: block;\r\n    }\r\n  `}\r\n\r\n  ${props => props.matched && css`\r\n    box-shadow: 0 0 2px 4px rgba(40, 255, 40, 0.8);\r\n\r\n    & > .country-name > p {\r\n      display: block;\r\n    }\r\n  `}\r\n\r\n  @media (min-width: 480px) {\r\n    &:hover {\r\n      ${props => !props.tried && !props.disabled && css`\r\n        box-shadow: 0 0 6px 6px rgba(80, 255, 80, 0.6);\r\n      `}\r\n    }\r\n\r\n    & {\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  @keyframes scoreGained {\r\n    0% {bottom: 50%; opacity: 100%}\r\n    40% {opacity: 100%}\r\n    100% {bottom: 8rem; opacity: 0%}\r\n  }\r\n`;\r\n","import { useContext } from 'react';\r\nimport { LanguageContext } from '../context/LanguageContext';\r\nimport CardEl from '../styledElements/FlagCard';\r\n\r\nconst FlagCard = ({\r\n  card, checkMatch, scoreValue, roundOver,\r\n}) => {\r\n  const { getCountryName } = useContext(LanguageContext);\r\n\r\n  return (\r\n    <CardEl\r\n      onClick={!card.tried && !roundOver ? () => checkMatch(card) : () => {}}\r\n      tried={card.tried}\r\n      matched={card.matched}\r\n      disabled={roundOver}\r\n    >\r\n      <div className=\"country-name\">\r\n        <p>{getCountryName(card.country)}</p>\r\n        {card.matched && <h2 className=\"score-gained\">+{scoreValue}</h2>}\r\n      </div>\r\n      <img src={card.flagURL} />\r\n    </CardEl>\r\n  );\r\n};\r\n\r\nexport default FlagCard;\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport default styled.article`\r\n  display: inline-block;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  box-shadow: 0 0 10px 1px rgba(0, 0, 0, 0.2);\r\n  position: relative;\r\n  height: 100%;\r\n\r\n  & > img {\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    user-select: none;\r\n    user-drag: none;\r\n  }\r\n\r\n  .cheat-text {\r\n    position: absolute;\r\n    color: pink;\r\n    background-color: black;\r\n    font-size: 2rem;\r\n    right: 0;\r\n    bottom: 0;\r\n  }\r\n\r\n  ${props => props.buffer && css`\r\n    & {\r\n      display: none;\r\n    }\r\n  `}\r\n\r\n  @media (min-width: 480px) {\r\n    & {\r\n      border-radius: 5px;\r\n      height: calc(100vw * 0.35);\r\n      max-height: calc(2500px * 0.35);\r\n    }\r\n  }\r\n`;\r\n","import CardEl from '../styledElements/PictureCard';\r\n\r\nconst PictureCard = ({ card, buffer }) => (\r\n  <CardEl buffer={buffer}>\r\n    {process.env.NODE_ENV === 'development' && <p className=\"cheat-text\">{card.country}</p>}\r\n    <img src={card.pictureURL} />\r\n  </CardEl>\r\n);\r\n\r\nexport default PictureCard;\r\n","import { useState, useEffect, useContext } from 'react';\r\nimport { LanguageContext } from '../context/LanguageContext';\r\nimport { mapFlagCards, mapPictureCards, shuffleArray } from '../helpers';\r\nimport FlagCard from './FlagCard';\r\nimport PictureCard from './PictureCard';\r\n\r\nconst Board = ({ setFinished, onMatched }) => {\r\n  const { getTexts, language } = useContext(LanguageContext);\r\n  const [texts, setTexts] = useState({});\r\n  const [flagCards, setFlagCards] = useState(null);\r\n  const [pictureCards, setPictureCards] = useState(null);\r\n  const [currentPicture, setCurrentPicture] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [roundOver, setRoundOver] = useState(false);\r\n  const serverURL = process.env.NODE_ENV === 'production' ? 'https://quarantine-traveler.herokuapp.com' : 'http://localhost:8080';\r\n\r\n  const checkMatch = flag => {\r\n    if (flag.country === currentPicture.country) {\r\n      setRoundOver(true);\r\n      const temp = flagCards;\r\n      temp[flagCards.length - pictureCards.length] = temp[flagCards.length - pictureCards.length]\r\n        .map(flagCard => (flagCard.id === flag.id ? { ...flagCard, matched: true } : flagCard));\r\n      setFlagCards(temp);\r\n      setTimeout(() => setPictureCards(pictureCards.filter((card, index) => index !== 0)), 2000);\r\n      onMatched(true);\r\n    } else {\r\n      onMatched(false);\r\n      const temp = flagCards;\r\n      temp[flagCards.length - pictureCards.length] = temp[flagCards.length - pictureCards.length]\r\n        .map(flagCard => (flagCard.id === flag.id ? { ...flagCard, tried: true } : flagCard));\r\n      setFlagCards(temp);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTexts(getTexts().game);\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    if (!pictureCards) {\r\n      return;\r\n    }\r\n\r\n    if (pictureCards.length === 0) {\r\n      setFinished(true);\r\n      return;\r\n    }\r\n\r\n    setCurrentPicture(pictureCards[0]);\r\n    setRoundOver(false);\r\n  }, [pictureCards]);\r\n\r\n  useEffect(() => {\r\n    fetch(serverURL)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.error) {\r\n          setError('Error loading game');\r\n          return;\r\n        }\r\n        const flags = data.flags.map(flagGroup => mapFlagCards([...shuffleArray(flagGroup)]));\r\n        const pictures = mapPictureCards(data.pictures);\r\n        setFlagCards(flags);\r\n        setPictureCards(pictures);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  if (error) {\r\n    return <h2>{error}</h2>;\r\n  }\r\n\r\n  if (loading) {\r\n    return <h2>{texts.loading}</h2>;\r\n  }\r\n\r\n  if (pictureCards.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <section className=\"board\">\r\n      <section className=\"board__column board__column--picture\">\r\n        {pictureCards.length > 1 && <PictureCard card={pictureCards[1]} buffer/>}\r\n        <PictureCard card={currentPicture} />\r\n      </section>\r\n      <section className=\"board__column board__column--flags\">\r\n        {flagCards && flagCards[flagCards.length - pictureCards.length].map(card => (\r\n          <FlagCard\r\n            key={card.id}\r\n            card={card}\r\n            checkMatch={checkMatch}\r\n            scoreValue={\r\n              flagCards[flagCards.length - pictureCards.length]\r\n                .filter(flag => !flag.tried).length\r\n            }\r\n            roundOver={roundOver}\r\n          />\r\n        ))}\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const mapPictureCards = countriesData => countriesData.map(country => ({\r\n  id: uuidv4(),\r\n  type: 'picture',\r\n  country: country.name,\r\n  pictureURL: country.pictureURL,\r\n}));\r\n\r\nexport const mapFlagCards = countriesData => countriesData.map(country => ({\r\n  id: uuidv4(),\r\n  type: 'flag',\r\n  country: country.name,\r\n  flagURL: `./assets/flags/${country.name}.png`,\r\n  tried: false,\r\n  matched: false,\r\n}));\r\n\r\nexport const shuffleArray = array => array.sort(() => 0.5 - Math.random());\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport default styled.button`\r\n  border: none;\r\n  padding: 0.8rem 1.5rem;\r\n  border-radius: 5px;\r\n  font-size: 1.6rem;\r\n  transition: all 0.2s;\r\n  cursor: pointer;\r\n  background-color: rgb(220, 220, 220);\r\n\r\n  &:hover {\r\n    background-color: rgb(230, 230, 230);\r\n  }\r\n\r\n  ${props => props.main && css`\r\n  background-color: rgb(82, 235, 123);\r\n    padding: 0.8rem 2rem;\r\n  `}\r\n\r\n  ${props => props.main && !props.disabled && css`\r\n    &:hover {\r\n      background-color: rgb(102, 255, 153);\r\n    }\r\n  `}\r\n\r\n  ${props => props.disabled && css`\r\n    background-color: rgb(180, 180, 180);\r\n    color: rgb(100, 100, 100);\r\n    transition: none;\r\n    cursor: default;\r\n\r\n    &:hover {\r\n      background-color: rgb(180, 180, 180);\r\n    }\r\n  `}\r\n\r\n  ${props => props.again && css`\r\n    background-color: rgb(82, 235, 123);\r\n\r\n    &:hover {\r\n      background-color: rgb(102, 255, 153);\r\n    }\r\n  `}\r\n\r\n  ${props => props.start && css`\r\n    padding: 0.8rem 2.5rem;\r\n  `}\r\n`;\r\n","import { useState, useEffect, useContext } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { LanguageContext } from '../context/LanguageContext';\r\nimport Board from '../components/Board';\r\nimport ButtonEl from '../styledElements/Button';\r\nimport './Game.css';\r\n\r\nconst Game = () => {\r\n  const { getTexts, language } = useContext(LanguageContext);\r\n  const [texts, setTexts] = useState({});\r\n  const [tries, setTries] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [finished, setFinished] = useState(false);\r\n  const SOUNDS = [\r\n    {\r\n      name: 'match',\r\n      file: new Audio('./assets/sound/match.wav'),\r\n    },\r\n    {\r\n      name: 'fail',\r\n      file: new Audio('./assets/sound/fail.wav'),\r\n    },\r\n  ];\r\n  const history = useHistory();\r\n\r\n  const playSound = file => {\r\n    const audio = SOUNDS.find(sound => sound.name === file).file;\r\n    audio.volume = 0.2;\r\n    audio.play();\r\n  };\r\n\r\n  const onMatched = bool => {\r\n    if (bool) {\r\n      playSound('match');\r\n      setScore(score + (6 - tries));\r\n      setTries(0);\r\n      return;\r\n    }\r\n    playSound('fail');\r\n    setTries(tries + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTexts(getTexts().game);\r\n  }, [language]);\r\n\r\n  if (finished) {\r\n    return (\r\n      <div className=\"container container--column-center\">\r\n        <h1 className=\"finished-text\">\r\n          {texts.finishedTxt1} {score}{texts.finishedTxt2}\r\n        </h1>\r\n        <section className=\"buttons-wrapper\">\r\n          <ButtonEl onClick={() => history.go(0)} again>\r\n            {texts.finishedBtnAgain}\r\n          </ButtonEl>\r\n          <Link to=\"/\">\r\n            <ButtonEl>{texts.finishedBtnHome}</ButtonEl>\r\n          </Link>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container container--column-center\">\r\n      <Link to=\"/\">\r\n        <span className=\"btn-home\">\r\n          <span className=\"material-icons btn-home__icon\">exit_to_app</span>\r\n          <span className=\"btn-home__text\">{texts.btnHome}</span>\r\n        </span>\r\n      </Link>\r\n      <article className=\"counter\">{texts.counter}: <p className=\"score\">{score}</p>{language === 'korean' && '점'}</article>\r\n      <Board setFinished={setFinished} onMatched={onMatched} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport default styled.button`\r\n  height: 2rem;\r\n  width: 3rem;\r\n  border: 1px solid #333;\r\n  cursor: pointer;\r\n  border-radius: 2px;\r\n  opacity: 50%;\r\n  margin-right: 0.5rem;\r\n\r\n  &:last-of-type {\r\n    margin-right: 0;\r\n  }\r\n\r\n  ${props => css`\r\n    background-image: url('assets/flags/${props.country}.png');\r\n    background-size: cover;\r\n    background-position: center;\r\n  `}\r\n\r\n  ${props => props.active && css`\r\n    opacity: 100%;\r\n  `}\r\n`;\r\n","import { useContext } from 'react';\r\nimport { LanguageContext } from '../context/LanguageContext';\r\nimport ButtonEl from '../styledElements/LanguageButton';\r\n\r\nconst LanguageButton = ({ buttonLanguage, country }) => {\r\n  const { language, setLanguage } = useContext(LanguageContext);\r\n\r\n  return (\r\n    <ButtonEl\r\n      onClick={() => setLanguage(buttonLanguage)}\r\n      country={country}\r\n      active={language === buttonLanguage}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LanguageButton;\r\n","export default __webpack_public_path__ + \"static/media/traveller.335e8bd8.png\";","export default __webpack_public_path__ + \"static/media/worldwide.835418a6.png\";","export default __webpack_public_path__ + \"static/media/airplane.08eb947d.png\";","import { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ButtonEl from '../styledElements/Button';\r\nimport LanguageButton from '../components/LanguageButton';\r\nimport { LanguageContext } from '../context/LanguageContext';\r\nimport traveller from '../assets/traveller.png';\r\nimport world from '../assets/worldwide.png';\r\nimport plane from '../assets/airplane.png';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n  const [texts, setTexts] = useState({});\r\n  const { getTexts, language } = useContext(LanguageContext);\r\n\r\n  useEffect(() => {\r\n    setTexts(getTexts().home);\r\n  }, [language]);\r\n\r\n  return (\r\n    <div className=\"container container--column-center\">\r\n      <h1 className=\"main-heading\">Quarantine Traveler</h1>\r\n      <h2 className=\"sub-heading\">{texts.subHeading}</h2>\r\n      <Link to=\"/game\">\r\n        <ButtonEl main start>{texts.startButton}</ButtonEl>\r\n      </Link>\r\n      <section className=\"lang-btn-wrapper\">\r\n        <LanguageButton buttonLanguage=\"english\" country=\"uk\">English</LanguageButton>\r\n        <LanguageButton buttonLanguage=\"swedish\" country=\"sweden\">Svenska</LanguageButton>\r\n        <LanguageButton buttonLanguage=\"korean\" country=\"korea\">한국어</LanguageButton>\r\n      </section>\r\n      <img className=\"img-world\" src={world} />\r\n      <img className=\"img-traveller\" src={traveller} />\r\n      <img className=\"img-plane\" src={plane} />\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { LanguageProvider } from './context/LanguageContext';\r\nimport Game from './pages/Game';\r\nimport Home from './pages/Home';\r\nimport './App.css';\r\n\r\nconst App = () => (\r\n  <Router basename=\"/\">\r\n    <LanguageProvider>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/game\" component={Game} />\r\n        </Switch>\r\n      </div>\r\n    </LanguageProvider>\r\n  </Router>\r\n);\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}