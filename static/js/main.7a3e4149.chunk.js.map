{"version":3,"sources":["styledElements/Card.js","components/Card.js","styledElements/Button.js","components/Board.js","helpers.js","pages/Game.js","assets/traveller.png","assets/worldwide.png","assets/airplane.png","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["styled","article","props","selected","css","Card","card","toggleSelected","onClick","src","type","pictureURL","flagURL","button","main","disabled","again","start","Board","incrementTries","setFinished","onMatched","useState","cards","setCards","error","setError","loading","setLoading","setSelected","selectedRef","useRef","cardsRef","length","map","select","shuffleArray","array","sort","Math","random","checkMatch","current","country","filter","spacebarCheckMatch","event","code","useEffect","some","id","fetch","then","res","json","data","flagCards","uuidv4","name","pictureCards","countriesData","mapPictureCards","document","addEventListener","removeEventListener","className","Button","Game","tries","setTries","finished","matched","setMatched","failed","setFailed","history","useHistory","triesRef","to","go","bool","setTimeout","Home","world","traveller","plane","App","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7a3e4149.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\n\nexport default styled.article`\n  display: inline-block;\n  width: 250px;\n  height: 165px;\n  overflow: hidden;\n  box-shadow: 0 0 10px 1px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    ${props => !props.selected && css`\n      /* box-shadow: 0 0 5px 6px rgba(225, 39, 217, 0.6); */\n      box-shadow: 0 0 6px 6px rgba(80, 255, 80, 0.6);\n    `}\n  }\n\n  & > img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n\n  ${props => props.selected && css`\n      /* box-shadow: 0 0 0 6px rgba(255, 50, 230, 1); */\n      box-shadow: 0 0 4px 8px rgba(80, 255, 80, 1);\n    `};\n`;\n","import CardEl from '../styledElements/Card';\n\nconst Card = ({ card, toggleSelected }) =>  (\n  <CardEl onClick={() => toggleSelected(card)} selected={card.selected}>\n    <img src={card.type === 'picture' ? card.pictureURL : card.flagURL} />\n  </CardEl>\n);\n\nexport default Card;\n","import styled, { css } from 'styled-components';\n\nexport default styled.button`\n  border: none;\n  padding: 0.8rem 1.5rem;\n  border-radius: 5px;\n  font-size: 1.6rem;\n  transition: all 0.2s;\n  cursor: pointer;\n  background-color: rgb(220, 220, 220);\n\n  &:hover {\n    background-color: rgb(230, 230, 230);\n  }\n\n  ${props => props.main && css`\n  background-color: rgb(82, 235, 123);\n    padding: 0.8rem 2rem;\n  `}\n\n  ${props => props.main && !props.disabled && css`\n    &:hover {\n      background-color: rgb(102, 255, 153);\n    }\n  `}\n\n  ${props => props.disabled && css`\n    background-color: rgb(180, 180, 180);\n    color: rgb(100, 100, 100);\n    transition: none;\n    cursor: default;\n\n    &:hover {\n      background-color: rgb(180, 180, 180);\n    }\n  `}\n\n  ${props => props.again && css`\n    background-color: rgb(82, 235, 123);\n\n    &:hover {\n      background-color: rgb(102, 255, 153);\n    }\n  `}\n\n  ${props => props.start && css`\n    padding: 1rem 3rem;\n    font-size: 1.8rem;\n  `}\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport { mapPictureCards, mapFlagCards } from '../helpers';\nimport Card from './Card';\nimport ButtonEl from '../styledElements/Button';\n\nconst Board = ({ incrementTries, setFinished, onMatched }) => {\n  const [cards, setCards] = useState(null);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [selected, setSelected] = useState([]);\n  const selectedRef = useRef(selected);\n  const cardsRef = useRef(cards);\n\n  const toggleSelected = card => {\n    switch (selected.length) {\n      case 0:\n        setSelected([card]);\n        break;\n      case 1:\n        setSelected(selected[0].type === card.type\n          ? [card]\n          : [...selected, card]);\n        break;\n      case 2:\n        setSelected(selected.map(select => (\n          select.type === card.type\n            ? card\n            : select)));\n        break;\n      default:\n        setSelected([]);\n    }\n  };\n\n  const shuffleArray = array => array.sort(() => 0.5 - Math.random());\n\n  const checkMatch = () => {\n    if (selectedRef.current[0].country === selectedRef.current[1].country) {\n      setCards(cardsRef.current.filter(card => card.country !== selectedRef.current[0].country));\n      onMatched(true);\n    } else {\n      onMatched(false);\n    }\n    setSelected([]);\n    incrementTries();\n  };\n\n  const spacebarCheckMatch = event => {\n    if (event.code === 'Space' && selectedRef.current.length === 2) {\n      checkMatch();\n    }\n  };\n\n  useEffect(() => {\n    cardsRef.current = cards;\n\n    if (cards && cards.length === 0) {\n      setFinished(true);\n    }\n  }, [cards]);\n\n  useEffect(() => {\n    selectedRef.current = selected;\n\n    if (!cards) {\n      return;\n    }\n\n    setCards(cards.map(card => (selected.some(select => select.id === card.id) ? ({\n      ...card,\n      selected: true,\n    })\n      : ({\n        ...card,\n        selected: false,\n      })\n    )));\n  }, [selected]);\n\n  useEffect(() => {\n    fetch('https://quarantine-traveler.herokuapp.com')\n      .then(res => res.json())\n      .then(data => {\n        if (data.error) {\n          setError('Error loading cards');\n          return;\n        }\n        const flagCards = mapFlagCards(data);\n        const pictureCards = mapPictureCards(data);\n        setCards([...shuffleArray(flagCards), ...shuffleArray(pictureCards)]);\n        setLoading(false);\n      });\n\n    document.addEventListener('keyup', spacebarCheckMatch);\n    return () => {\n      document.removeEventListener('keyup', spacebarCheckMatch);\n    };\n  }, []);\n\n  if (error) {\n    return <h2>{error}</h2>;\n  }\n\n  if (loading) {\n    return <h2>게임 로딩 중입니다...</h2>;\n  }\n\n  return (\n    <>\n      <section className=\"board\">\n        <section className=\"board__column board__column--left\">\n          {cards && cards.filter(card => card.type === 'flag').map(card => (\n            <Card key={card.id} card={card} toggleSelected={toggleSelected} />\n          ))}\n        </section>\n        <section className=\"board__column board__column--right\">\n          {cards && cards.filter(card => card.type === 'picture').map(card => (\n            <Card key={card.id} card={card} toggleSelected={toggleSelected} />\n          ))}\n        </section>\n      </section>\n      <div className=\"wrapper-fixed\">\n        <ButtonEl\n          onClick={selected.length === 2 ? checkMatch : () => {}}\n          disabled={selected.length < 2}\n          main\n        >\n          연결하기\n        </ButtonEl>\n      </div>\n    </>\n  );\n};\n\nexport default Board;\n","import { v4 as uuidv4 } from 'uuid';\n\nexport const mapPictureCards = countriesData => countriesData.map(country => ({\n  id: uuidv4(),\n  type: 'picture',\n  country: country.name,\n  pictureURL: country.pictureURL,\n  selected: false,\n}));\n\nexport const mapFlagCards = countriesData => countriesData.map(country => ({\n  id: uuidv4(),\n  type: 'flag',\n  country: country.name,\n  flagURL: `./assets/flags/${country.name}.png`,\n  selected: false,\n}));\n","import { useState, useRef, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Board from '../components/Board';\nimport ButtonEl from '../styledElements/Button';\n\nconst Game = () => {\n  const [tries, setTries] = useState(0);\n  const [finished, setFinished] = useState(false);\n  const [matched, setMatched] = useState(false);\n  const [failed, setFailed] = useState(false);\n  const history = useHistory();\n  const triesRef = useRef(tries);\n\n  const incrementTries = () => {\n    setTries(triesRef.current + 1);\n  };\n\n  const onMatched = bool => {\n    if (bool) {\n      setMatched(true);\n      setTimeout(() => setMatched(false), 2500);\n      return;\n    }\n    setFailed(true);\n    setTimeout(() => setFailed(false), 2500);\n  };\n\n  useEffect(() => {\n    triesRef.current = tries;\n  }, [tries]);\n\n  if (finished) {\n    return (\n      <div className=\"container container--column-center\">\n        <h1>잘 하셨습니다! {tries} 차례 시도하고 게임 성공하셨습니다!</h1>\n        <section className=\"buttons-wrapper\">\n          <Link to=\"/\">\n            <ButtonEl>홈 페이지</ButtonEl>\n          </Link>\n          <ButtonEl onClick={() => history.go(0)} again>게임 또 하기</ButtonEl>\n        </section>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container container--column-center\">\n      <Link to=\"/\">\n        <span className=\"btn-home\">\n          <span className=\"material-icons btn-home__icon\">exit_to_app</span>\n          돌아가기\n        </span>\n      </Link>\n      <h1 className=\"counter\">{tries} 차례 시도</h1>\n      <p className=\"tips\">Tips: Use the spacebar to match</p>\n      {matched && <p className=\"matched\">잘 하셨어요!</p>}\n      {failed && <p className=\"failed\">다시 한 번 해 보세요!</p>}\n      <Board incrementTries={incrementTries} setFinished={setFinished} onMatched={onMatched} />\n    </div>\n  );\n};\n\nexport default Game;\n","export default __webpack_public_path__ + \"static/media/traveller.335e8bd8.png\";","export default __webpack_public_path__ + \"static/media/worldwide.835418a6.png\";","export default __webpack_public_path__ + \"static/media/airplane.08eb947d.png\";","import { Link } from 'react-router-dom';\nimport ButtonEl from '../styledElements/Button';\nimport traveller from '../assets/traveller.png';\nimport world from '../assets/worldwide.png';\nimport plane from '../assets/airplane.png';\n\nconst Home = () => (\n  <div className=\"container container--column-center\">\n    <h1 className=\"main-heading\">Quarantine Traveler</h1>\n    <h2 className=\"sub-heading\">게임을 한 번 해 보십시오!</h2>\n    <Link to=\"/game\">\n      <ButtonEl main start>게임 시작</ButtonEl>\n    </Link>\n    <img className=\"img-world\" src={world} />\n    <img className=\"img-traveller\" src={traveller} />\n    <img className=\"img-plane\" src={plane} />\n  </div>\n);\n\nexport default Home;\n","import { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Game from './pages/Game';\nimport Home from './pages/Home';\nimport './App.css';\n\nconst App = () => (\n  <Router basename=\"/\">\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/game\" component={Game} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}