{"version":3,"sources":["context/LanguageContext.js","styledElements/FlagCard.js","components/FlagCard.js","styledElements/PictureCard.js","components/PictureCard.js","components/Board.js","helpers.js","styledElements/Button.js","pages/Game.js","assets/traveller.png","assets/worldwide.png","assets/airplane.png","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["LanguageContext","createContext","LanguageProvider","children","useState","language","setLanguage","Provider","value","styled","article","props","disabled","css","tried","matched","FlagCard","card","checkMatch","scoreValue","roundOver","onClick","className","country","src","flagURL","buffer","PictureCard","process","pictureURL","Board","setFinished","onMatched","flagCards","setFlagCards","pictureCards","setPictureCards","currentPicture","setCurrentPicture","error","setError","loading","setLoading","setRoundOver","flag","temp","length","map","flagCard","id","setTimeout","filter","index","useEffect","fetch","then","res","json","data","flags","flagGroup","sort","Math","random","uuidv4","type","name","pictures","button","main","again","start","Game","tries","setTries","score","setScore","finished","SOUNDS","file","Audio","history","useHistory","playSound","audio","find","sound","volume","play","Button","go","to","bool","Home","texts","setTexts","useContext","subHeading","startButton","world","traveller","plane","App","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.316fa0d7.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\n\nexport const LanguageContext = createContext();\n\nexport const LanguageProvider = ({ children }) => {\n  const [language, setLanguage] = useState('english');\n\n  return (\n    <LanguageContext.Provider value={[language, setLanguage]}>\n      { children }\n    </LanguageContext.Provider>\n  );\n};\n","import styled, { css } from 'styled-components';\n\nexport default styled.article`\n  display: block;\n  position: relative;\n  width: 100%;\n  height: calc(100vw * 0.25);\n  /* overflow: hidden; */\n  box-shadow: 0 0 10px 1px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  cursor: pointer;\n\n  & > .country-name {\n    display: none;\n    position: absolute;\n    background-color: rgba(150, 150, 150, 0.5);\n    height: 100%;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n\n    & > p {\n      display: none;\n      color: white;\n      text-transform: capitalize;\n      text-shadow: 0 0 5px rgba(0, 0, 0, 0.8);\n      font-size: 1.5rem;\n    }\n\n    & > .score-gained {\n      position: absolute;\n      color: rgb(40, 255, 40);\n      text-shadow: 0 0 5px rgba(0, 0, 0, 0.8);\n      animation: scoreGained 1.5s ease-out forwards;\n    }\n  }\n\n  & > img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    border-radius: 5px;\n  }\n\n  ${props => props.disabled && css`\n    cursor: default;\n\n    & > .country-name {\n      display: flex;\n    }\n  `}\n\n  ${props => props.tried && css`\n    box-shadow: 0 0 2px 3px rgba(255, 40, 40, 0.8);\n    cursor: default;\n\n    & > .country-name {\n      display: flex;\n    }\n\n    & > .country-name > p {\n      display: block;\n    }\n  `}\n\n  ${props => props.matched && css`\n    box-shadow: 0 0 2px 4px rgba(40, 255, 40, 0.8);\n\n    & > .country-name > p {\n      display: block;\n    }\n  `}\n\n  @media (min-width: 480px) {\n    &:hover {\n      ${props => !props.tried && !props.disabled && css`\n        box-shadow: 0 0 6px 6px rgba(80, 255, 80, 0.6);\n      `}\n    }\n\n    & {\n      height: 100%;\n    }\n  }\n\n  @keyframes scoreGained {\n    0% {bottom: 50%; opacity: 100%}\n    40% {opacity: 100%}\n    100% {bottom: 8rem; opacity: 0%}\n  }\n`;\n","import CardEl from '../styledElements/FlagCard';\n\nconst FlagCard = ({\n  card, checkMatch, scoreValue, roundOver,\n}) => (\n  <CardEl\n    onClick={!card.tried && !roundOver ? () => checkMatch(card) : () => {}}\n    tried={card.tried}\n    matched={card.matched}\n    disabled={roundOver}\n  >\n    <div className=\"country-name\">\n      <p>{card.country}</p>\n      {card.matched && <h2 className=\"score-gained\">+{scoreValue}</h2>}\n    </div>\n    <img src={card.flagURL} />\n  </CardEl>\n);\n\nexport default FlagCard;\n","import styled, { css } from 'styled-components';\n\nexport default styled.article`\n  display: inline-block;\n  width: 100%;\n  overflow: hidden;\n  box-shadow: 0 0 10px 1px rgba(0, 0, 0, 0.2);\n  position: relative;\n  height: 100%;\n\n  & > img {\n    display: block;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n\n  .cheat-text {\n    position: absolute;\n    color: pink;\n    background-color: black;\n    font-size: 2rem;\n    right: 0;\n    bottom: 0;\n  }\n\n  ${props => props.buffer && css`\n    & {\n      display: none;\n    }\n  `}\n\n  @media (min-width: 480px) {\n    & {\n      border-radius: 5px;\n      height: calc(100vw * 0.35);\n      max-height: calc(2500px * 0.35);\n    }\n  }\n`;\n","import CardEl from '../styledElements/PictureCard';\n\nconst PictureCard = ({ card, buffer }) => (\n  <CardEl buffer={buffer}>\n    {process.env.NODE_ENV === 'development' && <p className=\"cheat-text\">{card.country}</p>}\n    <img src={card.pictureURL} />\n  </CardEl>\n);\n\nexport default PictureCard;\n","import { useState, useEffect } from 'react';\nimport { mapFlagCards, mapPictureCards, shuffleArray } from '../helpers';\nimport FlagCard from './FlagCard';\nimport PictureCard from './PictureCard';\n\nconst Board = ({ setFinished, onMatched }) => {\n  const [flagCards, setFlagCards] = useState(null);\n  const [pictureCards, setPictureCards] = useState(null);\n  const [currentPicture, setCurrentPicture] = useState(null);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [roundOver, setRoundOver] = useState(false);\n  const serverURL = process.env.NODE_ENV === 'production' ? 'https://quarantine-traveler.herokuapp.com' : 'http://localhost:8080';\n\n  const checkMatch = flag => {\n    if (flag.country === currentPicture.country) {\n      setRoundOver(true);\n      const temp = flagCards;\n      temp[flagCards.length - pictureCards.length] = temp[flagCards.length - pictureCards.length]\n        .map(flagCard => (flagCard.id === flag.id ? { ...flagCard, matched: true } : flagCard));\n      setFlagCards(temp);\n      setTimeout(() => setPictureCards(pictureCards.filter((card, index) => index !== 0)), 2000);\n      onMatched(true);\n    } else {\n      onMatched(false);\n      const temp = flagCards;\n      temp[flagCards.length - pictureCards.length] = temp[flagCards.length - pictureCards.length]\n        .map(flagCard => (flagCard.id === flag.id ? { ...flagCard, tried: true } : flagCard));\n      setFlagCards(temp);\n    }\n  };\n\n  useEffect(() => {\n    if (!pictureCards) {\n      return;\n    }\n\n    if (pictureCards.length === 0) {\n      setFinished(true);\n      return;\n    }\n\n    setCurrentPicture(pictureCards[0]);\n    setRoundOver(false);\n  }, [pictureCards]);\n\n  useEffect(() => {\n    fetch(serverURL)\n      .then(res => res.json())\n      .then(data => {\n        if (data.error) {\n          setError('Error loading game');\n          return;\n        }\n        const flags = data.flags.map(flagGroup => mapFlagCards([...shuffleArray(flagGroup)]));\n        const pictures = mapPictureCards(data.pictures);\n        setFlagCards(flags);\n        setPictureCards(pictures);\n        setLoading(false);\n      });\n  }, []);\n\n  if (error) {\n    return <h2>{error}</h2>;\n  }\n\n  if (loading) {\n    return <h2>게임 로딩 중...</h2>;\n  }\n\n  if (pictureCards.length === 0) {\n    return null;\n  }\n\n  return (\n    <section className=\"board\">\n      <section className=\"board__column board__column--picture\">\n        {pictureCards.length > 1 && <PictureCard card={pictureCards[1]} buffer/>}\n        <PictureCard card={currentPicture} />\n      </section>\n      <section className=\"board__column board__column--flags\">\n        {flagCards && flagCards[flagCards.length - pictureCards.length].map(card => (\n          <FlagCard\n            key={card.id}\n            card={card}\n            checkMatch={checkMatch}\n            scoreValue={\n              flagCards[flagCards.length - pictureCards.length]\n                .filter(flag => !flag.tried).length\n            }\n            roundOver={roundOver}\n          />\n        ))}\n      </section>\n    </section>\n  );\n};\n\nexport default Board;\n","import { v4 as uuidv4 } from 'uuid';\n\nexport const mapPictureCards = countriesData => countriesData.map(country => ({\n  id: uuidv4(),\n  type: 'picture',\n  country: country.name,\n  pictureURL: country.pictureURL,\n}));\n\nexport const mapFlagCards = countriesData => countriesData.map(country => ({\n  id: uuidv4(),\n  type: 'flag',\n  country: country.name,\n  flagURL: `./assets/flags/${country.name}.png`,\n  tried: false,\n  matched: false,\n}));\n\nexport const shuffleArray = array => array.sort(() => 0.5 - Math.random());\n","import styled, { css } from 'styled-components';\n\nexport default styled.button`\n  border: none;\n  padding: 0.8rem 1.5rem;\n  border-radius: 5px;\n  font-size: 1.6rem;\n  transition: all 0.2s;\n  cursor: pointer;\n  background-color: rgb(220, 220, 220);\n\n  &:hover {\n    background-color: rgb(230, 230, 230);\n  }\n\n  ${props => props.main && css`\n  background-color: rgb(82, 235, 123);\n    padding: 0.8rem 2rem;\n  `}\n\n  ${props => props.main && !props.disabled && css`\n    &:hover {\n      background-color: rgb(102, 255, 153);\n    }\n  `}\n\n  ${props => props.disabled && css`\n    background-color: rgb(180, 180, 180);\n    color: rgb(100, 100, 100);\n    transition: none;\n    cursor: default;\n\n    &:hover {\n      background-color: rgb(180, 180, 180);\n    }\n  `}\n\n  ${props => props.again && css`\n    background-color: rgb(82, 235, 123);\n\n    &:hover {\n      background-color: rgb(102, 255, 153);\n    }\n  `}\n\n  ${props => props.start && css`\n    padding: 1rem 3rem;\n    font-size: 1.8rem;\n  `}\n`;\n","import { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Board from '../components/Board';\nimport ButtonEl from '../styledElements/Button';\nimport './Game.css';\n\nconst Game = () => {\n  const [tries, setTries] = useState(0);\n  const [score, setScore] = useState(0);\n  const [finished, setFinished] = useState(false);\n  const SOUNDS = [\n    {\n      name: 'match',\n      file: new Audio('./assets/sound/match.wav'),\n    },\n    {\n      name: 'fail',\n      file: new Audio('./assets/sound/fail.wav'),\n    },\n  ];\n  const history = useHistory();\n\n  const playSound = file => {\n    const audio = SOUNDS.find(sound => sound.name === file).file;\n    audio.volume = 0.2;\n    audio.play();\n  };\n\n  const onMatched = bool => {\n    if (bool) {\n      playSound('match');\n      setScore(score + (6 - tries));\n      setTries(0);\n      return;\n    }\n    playSound('fail');\n    setTries(tries + 1);\n  };\n\n  if (finished) {\n    return (\n      <div className=\"container container--column-center\">\n        <h1 className=\"finished-text\">잘 하셨습니다! 점수가 {score}점으로 게임을 성공하셨습니다!</h1>\n        <section className=\"buttons-wrapper\">\n          <ButtonEl onClick={() => history.go(0)} again>게임 또 하기</ButtonEl>\n          <Link to=\"/\">\n            <ButtonEl>홈 페이지</ButtonEl>\n          </Link>\n        </section>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container container--column-center\">\n      <Link to=\"/\">\n        <span className=\"btn-home\">\n          <span className=\"material-icons btn-home__icon\">exit_to_app</span>\n          <span className=\"btn-home__text\">돌아가기</span>\n        </span>\n      </Link>\n      <article className=\"counter\">점수: <p className=\"score\">{score}</p>점</article>\n      <Board setFinished={setFinished} onMatched={onMatched} />\n    </div>\n  );\n};\n\nexport default Game;\n","export default __webpack_public_path__ + \"static/media/traveller.335e8bd8.png\";","export default __webpack_public_path__ + \"static/media/worldwide.835418a6.png\";","export default __webpack_public_path__ + \"static/media/airplane.08eb947d.png\";","import { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport ButtonEl from '../styledElements/Button';\nimport { LanguageContext } from '../context/LanguageContext';\nimport traveller from '../assets/traveller.png';\nimport world from '../assets/worldwide.png';\nimport plane from '../assets/airplane.png';\nimport './Home.css';\n\nconst Home = () => {\n  const [texts, setTexts] = useState({});\n  const [language, setLanguage] = useContext(LanguageContext);\n\n  useEffect(() => {\n    switch (language) {\n      case 'english':\n        setTexts({\n          subHeading: 'Let\\'s go on an adventure!',\n          startButton: 'Start',\n        });\n        break;\n      case 'swedish':\n        setTexts({\n          subHeading: 'Upptäck världen hemifrån!',\n          startButton: 'Starta',\n        });\n        break;\n      case 'korean':\n        setTexts({\n          subHeading: '게임을 한 번 해 보십시오!',\n          startButton: '게임 시작',\n        });\n        break;\n      default:\n        setTexts({\n          subHeading: 'Let\\'s go on an adventure!',\n          startButton: 'Start',\n        });\n    }\n  }, [language]);\n  return (\n    <div className=\"container container--column-center\">\n      <h1 className=\"main-heading\">Quarantine Traveler</h1>\n      <h2 className=\"sub-heading\">{texts.subHeading}</h2>\n      <Link to=\"/game\">\n        <ButtonEl main start>{texts.startButton}</ButtonEl>\n      </Link>\n      <button onClick={() => setLanguage('english')}>English</button>\n      <button onClick={() => setLanguage('swedish')}>Svenska</button>\n      <button onClick={() => setLanguage('korean')}>한국어</button>\n      <img className=\"img-world\" src={world} />\n      <img className=\"img-traveller\" src={traveller} />\n      <img className=\"img-plane\" src={plane} />\n  </div>\n  );\n};\n\nexport default Home;\n","import { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { LanguageProvider } from './context/LanguageContext';\nimport Game from './pages/Game';\nimport Home from './pages/Home';\nimport './App.css';\n\nconst App = () => (\n  <Router basename=\"/\">\n    <LanguageProvider>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/game\" component={Game} />\n        </Switch>\n      </div>\n    </LanguageProvider>\n  </Router>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}